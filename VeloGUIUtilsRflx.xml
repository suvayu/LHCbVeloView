<?xml version="1.0" encoding="ISO-8859-1"?>
<lcgdict>
    <selection>
	<!-- Instantiate STL classes and their nested types (as needed) -->
	<class pattern = "std::pair<*>::first_type" />
	<class pattern = "std::pair<*>::second_type" />
	<class pattern = "std::pair<*>" />
	<class pattern = "std::string::value_type" />
	<class pattern = "std::string::size_type" />
	<class pattern = "std::string::distance_type" />
	<class pattern = "std::string::allocator_type" />
	<class pattern = "std::string::pointer" />
	<class pattern = "std::string::const_pointer" />
	<class pattern = "std::string::reference" />
	<class pattern = "std::string::const_reference" />
	<class pattern = "std::string::iterator" />
	<class pattern = "std::string::const_iterator" />
	<class pattern = "std::string::reverse_iterator" />
	<class pattern = "std::string::const_reverse_iterator" />
	<class name = "std::string" />
	<class pattern = "std::vector<*>::value_type" />
	<class pattern = "std::vector<*>::distance_type" />
	<class pattern = "std::vector<*>::size_type" />
	<class pattern = "std::vector<*>::allocator_type" />
	<class pattern = "std::vector<*>::pointer" />
	<class pattern = "std::vector<*>::const_pointer" />
	<class pattern = "std::vector<*>::reference" />
	<class pattern = "std::vector<*>::const_reference" />
	<class pattern = "std::vector<*>::iterator" />
	<class pattern = "std::vector<*>::const_iterator" />
	<class pattern = "std::vector<*>::reverse_iterator" />
	<class pattern = "std::vector<*>::const_reverse_iterator" />
	<class pattern = "std::vector<*>" />
	<class pattern = "std::map<*>::mapped_type" />
	<class pattern = "std::map<*>::key_type" />
	<class pattern = "std::map<*>::value_type" />
	<class pattern = "std::map<*>::size_type" />
	<class pattern = "std::map<*>::distance_type" />
	<class pattern = "std::map<*>::allocator_type" />
	<class pattern = "std::map<*>::pointer" />
	<class pattern = "std::map<*>::const_pointer" />
	<class pattern = "std::map<*>::reference" />
	<class pattern = "std::map<*>::const_reference" />
	<class pattern = "std::map<*>::key_compare" />
	<class pattern = "std::map<*>::iterator" />
	<class pattern = "std::map<*>::const_iterator" />
	<class pattern = "std::map<*>::reverse_iterator" />
	<class pattern = "std::map<*>::const_reverse_iterator" />
	<class pattern = "std::map<*>" />
	<!-- Instantiate Velo GUI classes and their nested types (as needed) -->
	<class name = "DotLock::DotLockException" />
	<class name = "DotLock" />
	<class name = "TimeStamp::TimeStampException" />
	<class name = "TimeStamp" />
	<class name = "VersionedObjectBase::OutOfRangeException" />
	<class name = "VersionedObjectBase" />
	<class pattern = "VersionedObject<*>::mapped_type" />
	<class pattern = "VersionedObject<*>::obj_type" />
	<class pattern = "VersionedObject<*>::key_type" />
	<class pattern = "VersionedObject<*>::version_type" />
	<class pattern = "VersionedObject<*>::value_type" />
	<class pattern = "VersionedObject<*>::size_type" />
	<class pattern = "VersionedObject<*>::difference_type" />
	<class pattern = "VersionedObject<*>::allocator_type" />
	<class pattern = "VersionedObject<*>::insert_return_type" />
	<class pattern = "VersionedObject<*>::allocator_type" />
	<class pattern = "VersionedObject<*>::key_compare" />
	<class pattern = "VersionedObject<*>::version_compare" />
	<class pattern = "VersionedObject<*>::iterator" />
	<class pattern = "VersionedObject<*>::const_iterator" />
	<class pattern = "VersionedObject<*>::reverse_iterator" />
	<class pattern = "VersionedObject<*>::const_reverse_iterator" />
	<class pattern = "VersionedObject<*>" />
    </selection>
</lcgdict>
